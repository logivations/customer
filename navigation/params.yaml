 /**: 
  global_costmap:
    global_costmap:
      ros__parameters:
        footprint: "[[1.485, 0.4], [1.485, -0.4], [-0.35, -0.4], [-0.35, 0.4]]"
        inflation_layer:
          cost_scaling_factor: 2.0
          inflation_radius: 2.5
        stvl_layer:
          voxel_decay: 5.
          mark_threshold: 2

  
  local_costmap:
    local_costmap:
      ros__parameters:
        footprint: "[[1.485, 0.4], [1.485, -0.4], [-0.35, -0.4], [-0.35, 0.4]]"

  planner_server:
    ros__parameters:
      SmacPlannerHybrid:
        smooth_path: true # Whether to smooth searched path TODO check if it works now
        minimum_turning_radius: 1.5 # For SE2 node & smoother: minimum turning radius in m of path / vehicle
        reverse_penalty: 1.5 # For Reeds-Shepp model: penalty to apply if motion is reversing, must be => 1
        cost_penalty: 2.7 # For Hybrid nodes: penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
        
        

  controller_server:
    ros__parameters:
      general_goal_checker:
        xy_goal_tolerance: 1.1
        yaw_goal_tolerance: 1.2

      # lower tolerance for reaching the final goal
      exact_path_goal_checker:
        xy_goal_tolerance: 0.2
        yaw_goal_tolerance: 0.06
      
      # Remark: Yaml Anchors and aliases are not supported by rcl https://github.com/ros2/rcl/issues/563. We use pyYaml in get_config to workaround
      GeneralFollowPath: &GeneralFollowPath
        # Obstacles
        min_obstacle_dist: 0.55
        inflation_dist: 1.3
        weight_inflation: 0.5
        weight_viapoint: 0.2
        weight_kinematics_forward_drive: 0.05
        max_number_classes: 2
        via_points_ordered: True
        
      LaneFollowPath:
        # Obstacles
        min_obstacle_dist: 0.55

      ExactGoalReachFollowPath:
        max_global_plan_lookahead_dist: 4.0
